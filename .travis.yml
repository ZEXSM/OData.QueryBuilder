language: csharp
dotnet: 3.1
mono: none
solution: OData.QueryBuilder.sln
branches:
    only:
        - main
before_script:
  - dotnet restore
script:
    - dotnet build
    - dotnet test ./test/OData.QueryBuilder.Test -c $CONFIGURATION -f netcoreapp3.1
after_success:
    - dotnet minicover instrument
    - dotnet minicover reset
    - dotnet test --no-build ./test/OData.QueryBuilder.Test -c $CONFIGURATION -f netcoreapp3.1
    - dotnet minicover uninstrument
    - dotnet minicover report
    - dotnet minicover coverallsreport --service-name "travis-ci" --service-job-id $TRAVIS_JOB_ID
before_deploy:
    - git checkout origin/main && git fetch && git remote set-url origin https://${GITHUB_OAUTH_TOKEN}@github.com/ZEXSM/OData.QueryBuilder.git
    - PR_TITLE=$(git log -1 --pretty='%f')
    - LAST_TAG=$(echo $(git describe --tags $(git rev-list --tags --max-count=1)) | cut -d'v' -f 2)
    - CURRENT_MAJOR=$(echo $LAST_TAG | cut -d. -f 1)
    - CURRENT_MINOR=$(echo $LAST_TAG | cut -d. -f 2)
    - CURRENT_PATCH=$(echo $(echo $LAST_TAG | cut -d. -f 3) | cut -d- -f 1)
    - RC=$(echo $(echo $LAST_TAG | cut -d. -f 3) | cut -d- -f 2)
    - MAJOR=$(([ "$RC" == "rc" ] && echo $CURRENT_MAJOR) || ([ "$(echo $PR_TITLE | grep -oP 'release')" == "release" ] && echo $(($CURRENT_MAJOR+1))) || echo $CURRENT_MAJOR)
    - MINOR=$(([ "$RC" == "rc" ] && echo $CURRENT_MINOR) || ([ "$(echo $PR_TITLE | grep -oP 'release')" == "release" ] && echo 0) || ([ "$(echo $PR_TITLE | grep -oP 'feature')" == "feature" ] && echo $(($CURRENT_MINOR+1))) || echo $CURRENT_MINOR)
    - PATCH=$(([ "$RC" == "rc" ] && echo $CURRENT_PATCH) || ([ "$(echo $PR_TITLE | grep -oP 'release')" == "release" ] && echo 0) || ([ "$(echo $PR_TITLE | grep -oP 'feature')" == "feature" ] && echo 0) || echo $(($CURRENT_PATCH+1)))
    - NEW_TAG=$(echo $MAJOR.$MINOR.$PATCH)
    - PACKAGE_VERSION=${NEW_TAG:-$DEFAULT_PACKAGE_VERSION}
    - git tag v$PACKAGE_VERSION && git push origin v$PACKAGE_VERSION
    - dotnet pack -c $CONFIGURATION -p:PackageVersion=$PACKAGE_VERSION
deploy:
    provider: releases
    name: v$PACKAGE_VERSION
    token: $GITHUB_OAUTH_TOKEN
    cleanup: true
    repo: ZEXSM/OData.QueryBuilder
    on:
        branch: main
after_deploy:
    - dotnet nuget push ./src/OData.QueryBuilder/bin/Release/OData.QueryBuilder.$PACKAGE_VERSION.nupkg -k $NUGET_API_KEY -s $NUGET_SOURCE